# Form implementation generated from reading ui file 'Courrier.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from contextlib import nullcontext
from datetime import date
from tkinter import SEL, messagebox
import webbrowser
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QSortFilterProxyModel
from PyQt6.QtWidgets import QFileDialog
import requests
import webbrowser


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1217, 579)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("*{\n"
"color:#000;\n"
"border:none;\n"
"}\n"
"#tabWidget_2,#tab,#tab_2,#tab_3,#tab_4,#tab_5,#tab_6,#tab_7,#tab_8,#tab_9,#tab_10,#tab_11,#tab_12,#tab_13,#tab_14,#tabWidget,#centralwidget{\n"
"background-color:#eff9fe;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"#leftMenu{\n"
"background-color:#2596be;\n"
"}\n"
"QLineEdit{\n"
"background-color:transparent;\n"
"}\n"
"#searchFrame{\n"
"border-radius:10px;\n"
"border:2px solid #2596be;\n"
"}\n"
"QLabel{\n"
"color:#000;\n"
"border:none;\n"
"}\n"
"#appHeader{\n"
"color:#2596be;\n"
"}\n"
"#card1,#card2,#card3{\n"
"background-color:#fefeff;\n"
"}\n"
"#menuBtn{\n"
"color:#2596be;\n"
"}\n"
"#card1,#card2,#card3{\n"
"border-radius:10px;\n"
"border:2px solid #2596be;\n"
"}\n"
"\n"
"QLineEdit,QPushButton,QPlainTextEdit{\n"
"border-radius:10px;\n"
"border:2px solid #2596be;\n"
"background-color:white}\n"
"\n"
"QTableWidget,QDateEdit,QComboBox{\n"
"border:2px solid #2596be;\n"
"background-color:white}\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, -1, 1221, 551))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_2.setGeometry(QtCore.QRect(530, 230, 81, 31))
        self.pushButton_2.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
"color:white;\n"
"background-color: rgb(85, 170, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit.setGeometry(QtCore.QRect(440, 129, 341, 31))
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(self.tab_5)
        self.label_3.setGeometry(QtCore.QRect(350, 20, 431, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.tab_5)
        self.label_4.setGeometry(QtCore.QRect(340, 90, 481, 20))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color:rgb(0, 170, 0);")
        self.label_4.setObjectName("label_4")
        self.label_7 = QtWidgets.QLabel(self.tab_5)
        self.label_7.setGeometry(QtCore.QRect(290, 170, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_2.setGeometry(QtCore.QRect(440, 170, 341, 31))
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_8 = QtWidgets.QLabel(self.tab_5)
        self.label_8.setGeometry(QtCore.QRect(290, 130, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.tab_5)
        self.label_9.setGeometry(QtCore.QRect(140, 10, 121, 231))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap("images/2.png"))
        self.label_9.setObjectName("label_9")
        self.label_18 = QtWidgets.QLabel(self.tab_5)
        self.label_18.setGeometry(QtCore.QRect(50, 280, 241, 211))
        self.label_18.setText("")
        self.label_18.setPixmap(QtGui.QPixmap("images/R.png"))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.tab_5)
        self.label_19.setGeometry(QtCore.QRect(370, 340, 681, 101))
        self.label_19.setStyleSheet("font: 26pt \"Arial Rounded MT Bold\";\n"
"color: rgb(85, 170, 255);")
        self.label_19.setObjectName("label_19")
        self.tabWidget.addTab(self.tab_5, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label_5 = QtWidgets.QLabel(self.tab)
        self.label_5.setGeometry(QtCore.QRect(170, 40, 771, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.tab)
        self.label_6.setGeometry(QtCore.QRect(30, 130, 471, 251))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("images/R (1).png"))
        self.label_6.setObjectName("label_6")
        self.label_10 = QtWidgets.QLabel(self.tab)
        self.label_10.setGeometry(QtCore.QRect(550, 100, 331, 241))
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap("images/R.png"))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.tab)
        self.label_11.setGeometry(QtCore.QRect(930, 10, 331, 391))
        self.label_11.setText("")
        self.label_11.setPixmap(QtGui.QPixmap("images/OIP.png"))
        self.label_11.setObjectName("label_11")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.lineEdit_32 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_32.setGeometry(QtCore.QRect(50, 100, 291, 31))
        self.lineEdit_32.setText("")
        self.lineEdit_32.setObjectName("lineEdit_32")
        self.lineEdit_33 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_33.setGeometry(QtCore.QRect(50, 150, 291, 31))
        self.lineEdit_33.setText("")
        self.lineEdit_33.setObjectName("lineEdit_33")
        self.lineEdit_34 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_34.setGeometry(QtCore.QRect(50, 200, 291, 31))
        self.lineEdit_34.setText("")
        self.lineEdit_34.setObjectName("lineEdit_34")
        self.lineEdit_35 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_35.setGeometry(QtCore.QRect(50, 250, 291, 31))
        self.lineEdit_35.setText("")
        self.lineEdit_35.setObjectName("lineEdit_35")
        self.dateEdit = QtWidgets.QDateEdit(self.tab_2)
        self.dateEdit.setGeometry(QtCore.QRect(110, 310, 161, 31))
        self.dateEdit.setObjectName("dateEdit")
        self.label = QtWidgets.QLabel(self.tab_2)
        self.label.setGeometry(QtCore.QRect(50, 300, 51, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton_37 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_37.setGeometry(QtCore.QRect(950, 100, 56, 31))
        self.pushButton_37.setStyleSheet("background:white;")
        self.pushButton_37.setObjectName("pushButton_37")
        self.pushButton_38 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_38.setGeometry(QtCore.QRect(740, 100, 56, 31))
        self.pushButton_38.setStyleSheet("background:white;\n"
"")
        self.pushButton_38.setObjectName("pushButton_38")
        self.pushButton_39 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_39.setGeometry(QtCore.QRect(810, 100, 56, 31))
        self.pushButton_39.setStyleSheet("background:white;")
        self.pushButton_39.setObjectName("pushButton_39")
        self.tableWidget_9 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_9.setGeometry(QtCore.QRect(360, 150, 371, 192))
        self.tableWidget_9.setObjectName("tableWidget_9")
        self.tableWidget_9.setColumnCount(7)
        self.tableWidget_9.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_9.setHorizontalHeaderItem(6, item)
        self.pushButton_40 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_40.setGeometry(QtCore.QRect(280, 360, 56, 31))
        self.pushButton_40.setStyleSheet("background:white;")
        self.pushButton_40.setObjectName("pushButton_40")
        self.lineEdit_36 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_36.setGeometry(QtCore.QRect(50, 360, 221, 31))
        self.lineEdit_36.setText("")
        self.lineEdit_36.setObjectName("lineEdit_36")
        self.pushButton_41 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_41.setGeometry(QtCore.QRect(140, 410, 56, 31))
        self.pushButton_41.setStyleSheet("background:white;")
        self.pushButton_41.setObjectName("pushButton_41")
        self.lineEdit_37 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_37.setGeometry(QtCore.QRect(370, 100, 181, 31))
        self.lineEdit_37.setText("")
        self.lineEdit_37.setObjectName("lineEdit_37")
        self.pushButton_43 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_43.setGeometry(QtCore.QRect(880, 100, 56, 31))
        self.pushButton_43.setStyleSheet("background:white;")
        self.pushButton_43.setObjectName("pushButton_43")
        self.comboBox = QtWidgets.QComboBox(self.tab_2)
        self.comboBox.setGeometry(QtCore.QRect(580, 101, 121, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.setItemText(0, "")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_17 = QtWidgets.QLabel(self.tab_2)
        self.label_17.setGeometry(QtCore.QRect(1060, 10, 121, 101))
        self.label_17.setText("")
        self.label_17.setPixmap(QtGui.QPixmap("images/award-icon-06.png"))
        self.label_17.setObjectName("label_17")
        self.label_22 = QtWidgets.QLabel(self.tab_2)
        self.label_22.setGeometry(QtCore.QRect(250, -10, 681, 101))
        self.label_22.setStyleSheet("font: 26pt \"Arial Rounded MT Bold\";\n"
"color: rgb(0, 0, 0);")
        self.label_22.setObjectName("label_22")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.lineEdit_38 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_38.setGeometry(QtCore.QRect(30, 150, 141, 31))
        self.lineEdit_38.setText("")
        self.lineEdit_38.setObjectName("lineEdit_38")
        self.lineEdit_39 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_39.setGeometry(QtCore.QRect(360, 100, 181, 31))
        self.lineEdit_39.setText("")
        self.lineEdit_39.setObjectName("lineEdit_39")
        self.pushButton_45 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_45.setGeometry(QtCore.QRect(900, 100, 56, 31))
        self.pushButton_45.setStyleSheet("background:white;")
        self.pushButton_45.setObjectName("pushButton_45")
        self.lineEdit_40 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_40.setGeometry(QtCore.QRect(180, 100, 161, 31))
        self.lineEdit_40.setText("")
        self.lineEdit_40.setObjectName("lineEdit_40")
        self.pushButton_46 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_46.setGeometry(QtCore.QRect(690, 100, 56, 31))
        self.pushButton_46.setStyleSheet("background:white;\n"
"")
        self.pushButton_46.setObjectName("pushButton_46")
        self.pushButton_47 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_47.setGeometry(QtCore.QRect(280, 360, 56, 31))
        self.pushButton_47.setStyleSheet("background:white;")
        self.pushButton_47.setObjectName("pushButton_47")
        self.dateEdit_2 = QtWidgets.QDateEdit(self.tab_3)
        self.dateEdit_2.setGeometry(QtCore.QRect(140, 310, 161, 31))
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.tableWidget_10 = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget_10.setGeometry(QtCore.QRect(360, 150, 371, 192))
        self.tableWidget_10.setObjectName("tableWidget_10")
        self.tableWidget_10.setColumnCount(11)
        self.tableWidget_10.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_10.setHorizontalHeaderItem(10, item)
        self.lineEdit_41 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_41.setGeometry(QtCore.QRect(30, 360, 241, 31))
        self.lineEdit_41.setText("")
        self.lineEdit_41.setObjectName("lineEdit_41")
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(50, 300, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.pushButton_48 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_48.setGeometry(QtCore.QRect(830, 100, 56, 31))
        self.pushButton_48.setStyleSheet("background:white;")
        self.pushButton_48.setObjectName("pushButton_48")
        self.lineEdit_42 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_42.setGeometry(QtCore.QRect(30, 200, 141, 31))
        self.lineEdit_42.setText("")
        self.lineEdit_42.setObjectName("lineEdit_42")
        self.pushButton_49 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_49.setGeometry(QtCore.QRect(140, 410, 56, 31))
        self.pushButton_49.setStyleSheet("background:white;")
        self.pushButton_49.setObjectName("pushButton_49")
        self.lineEdit_43 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_43.setGeometry(QtCore.QRect(30, 100, 141, 31))
        self.lineEdit_43.setText("")
        self.lineEdit_43.setObjectName("lineEdit_43")
        self.pushButton_50 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_50.setGeometry(QtCore.QRect(760, 100, 56, 31))
        self.pushButton_50.setStyleSheet("background:white;")
        self.pushButton_50.setObjectName("pushButton_50")
        self.lineEdit_62 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_62.setGeometry(QtCore.QRect(180, 150, 161, 31))
        self.lineEdit_62.setText("")
        self.lineEdit_62.setObjectName("lineEdit_62")
        self.lineEdit_63 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_63.setGeometry(QtCore.QRect(30, 250, 141, 31))
        self.lineEdit_63.setText("")
        self.lineEdit_63.setObjectName("lineEdit_63")
        self.lineEdit_64 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_64.setGeometry(QtCore.QRect(180, 250, 161, 31))
        self.lineEdit_64.setText("")
        self.lineEdit_64.setObjectName("lineEdit_64")
        self.lineEdit_65 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_65.setGeometry(QtCore.QRect(180, 200, 161, 31))
        self.lineEdit_65.setText("")
        self.lineEdit_65.setObjectName("lineEdit_65")
        self.comboBox_2 = QtWidgets.QComboBox(self.tab_3)
        self.comboBox_2.setGeometry(QtCore.QRect(550, 100, 111, 31))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.setItemText(0, "")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.label_14 = QtWidgets.QLabel(self.tab_3)
        self.label_14.setGeometry(QtCore.QRect(1040, 10, 121, 101))
        self.label_14.setText("")
        self.label_14.setPixmap(QtGui.QPixmap("images/5462733.png"))
        self.label_14.setObjectName("label_14")
        self.label_21 = QtWidgets.QLabel(self.tab_3)
        self.label_21.setGeometry(QtCore.QRect(250, -10, 681, 101))
        self.label_21.setStyleSheet("font: 26pt \"Arial Rounded MT Bold\";\n"
"color: rgb(0, 0, 0);")
        self.label_21.setObjectName("label_21")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.pushButton_42 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_42.setGeometry(QtCore.QRect(920, 99, 56, 31))
        self.pushButton_42.setStyleSheet("background:white;")
        self.pushButton_42.setObjectName("pushButton_42")
        self.pushButton_44 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_44.setGeometry(QtCore.QRect(120, 410, 56, 31))
        self.pushButton_44.setStyleSheet("background:white;")
        self.pushButton_44.setObjectName("pushButton_44")
        self.label_12 = QtWidgets.QLabel(self.tab_4)
        self.label_12.setGeometry(QtCore.QRect(30, 340, 51, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.tableWidget_11 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_11.setGeometry(QtCore.QRect(400, 149, 371, 192))
        self.tableWidget_11.setObjectName("tableWidget_11")
        self.tableWidget_11.setColumnCount(3)
        self.tableWidget_11.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_11.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_11.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_11.setHorizontalHeaderItem(2, item)
        self.lineEdit_44 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_44.setGeometry(QtCore.QRect(410, 99, 181, 31))
        self.lineEdit_44.setText("")
        self.lineEdit_44.setObjectName("lineEdit_44")
        self.pushButton_51 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_51.setGeometry(QtCore.QRect(780, 99, 56, 31))
        self.pushButton_51.setStyleSheet("background:white;\n"
"")
        self.pushButton_51.setObjectName("pushButton_51")
        self.pushButton_52 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_52.setGeometry(QtCore.QRect(850, 99, 56, 31))
        self.pushButton_52.setStyleSheet("background:white;")
        self.pushButton_52.setObjectName("pushButton_52")
        self.comboBox_3 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_3.setGeometry(QtCore.QRect(620, 100, 121, 31))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.setItemText(0, "")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.dateEdit_3 = QtWidgets.QDateEdit(self.tab_4)
        self.dateEdit_3.setGeometry(QtCore.QRect(90, 350, 161, 31))
        self.dateEdit_3.setObjectName("dateEdit_3")
        self.label_13 = QtWidgets.QLabel(self.tab_4)
        self.label_13.setGeometry(QtCore.QRect(870, 150, 221, 311))
        self.label_13.setText("")
        self.label_13.setPixmap(QtGui.QPixmap("images/3392463.png"))
        self.label_13.setObjectName("label_13")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.tab_4)
        self.plainTextEdit.setGeometry(QtCore.QRect(30, 110, 271, 211))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.label_20 = QtWidgets.QLabel(self.tab_4)
        self.label_20.setGeometry(QtCore.QRect(250, -10, 681, 101))
        self.label_20.setStyleSheet("font: 26pt \"Arial Rounded MT Bold\";\n"
"color: rgb(0, 0, 0);")
        self.label_20.setObjectName("label_20")
        self.tabWidget.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1217, 18))
        self.menuBar.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.menuBar.setObjectName("menuBar")
        self.menuPassation = QtWidgets.QMenu(self.menuBar)
        self.menuPassation.setObjectName("menuPassation")
        self.menuComptabilit = QtWidgets.QMenu(self.menuBar)
        self.menuComptabilit.setObjectName("menuComptabilit")
        self.menuCoordination = QtWidgets.QMenu(self.menuBar)
        self.menuCoordination.setObjectName("menuCoordination")
        self.menuLogout = QtWidgets.QMenu(self.menuBar)
        self.menuLogout.setObjectName("menuLogout")
        MainWindow.setMenuBar(self.menuBar)
        self.btnconnection = QtGui.QAction(MainWindow)
        self.btnconnection.setCheckable(False)
        self.btnconnection.setEnabled(True)
        self.btnconnection.setObjectName("btnconnection")
        self.btndeconnection = QtGui.QAction(MainWindow)
        self.btndeconnection.setObjectName("btndeconnection")
        self.btnAppels_d_offres = QtGui.QAction(MainWindow)
        self.btnAppels_d_offres.setObjectName("btnAppels_d_offres")
        self.btnAvis_generaux = QtGui.QAction(MainWindow)
        self.btnAvis_generaux.setObjectName("btnAvis_generaux")
        self.btnPPM = QtGui.QAction(MainWindow)
        self.btnPPM.setObjectName("btnPPM")
        self.btnContrats = QtGui.QAction(MainWindow)
        self.btnContrats.setObjectName("btnContrats")
        self.btnConges = QtGui.QAction(MainWindow)
        self.btnConges.setObjectName("btnConges")
        self.btnOrdre_de_mimssions = QtGui.QAction(MainWindow)
        self.btnOrdre_de_mimssions.setObjectName("btnOrdre_de_mimssions")
        self.btnAutre_documents = QtGui.QAction(MainWindow)
        self.btnAutre_documents.setObjectName("btnAutre_documents")
        self.btnRecu_emeteur = QtGui.QAction(MainWindow)
        self.btnRecu_emeteur.setObjectName("btnRecu_emeteur")
        self.btnRecu_destinateur = QtGui.QAction(MainWindow)
        self.btnRecu_destinateur.setObjectName("btnRecu_destinateur")
        self.actionAcueile = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Desktop/acueile/Acueile.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionAcueile.setIcon(icon)
        self.actionAcueile.setObjectName("actionAcueile")
        self.actionPassation = QtGui.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Desktop/acueile/Passation.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionPassation.setIcon(icon1)
        self.actionPassation.setObjectName("actionPassation")
        self.actioncomptabilite = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("Desktop/acueile/Comptabilite.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actioncomptabilite.setIcon(icon2)
        self.actioncomptabilite.setObjectName("actioncomptabilite")
        self.actionRH = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("Desktop/acueile/RH.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRH.setIcon(icon3)
        self.actionRH.setObjectName("actionRH")
        self.actionCourrier = QtGui.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("Desktop/acueile/Courrier.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionCourrier.setIcon(icon4)
        self.actionCourrier.setObjectName("actionCourrier")
        self.actionpassassion = QtGui.QAction(MainWindow)
        self.actionpassassion.setObjectName("actionpassassion")
        self.actionComptabilit = QtGui.QAction(MainWindow)
        self.actionComptabilit.setObjectName("actionComptabilit")
        self.actioncordination = QtGui.QAction(MainWindow)
        self.actioncordination.setObjectName("actioncordination")
        self.actionExit = QtGui.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuPassation.addAction(self.actionpassassion)
        self.menuComptabilit.addAction(self.actionComptabilit)
        self.menuCoordination.addAction(self.actioncordination)
        self.menuLogout.addAction(self.actionExit)
        self.menuBar.addAction(self.menuPassation.menuAction())
        self.menuBar.addAction(self.menuComptabilit.menuAction())
        self.menuBar.addAction(self.menuCoordination.menuAction())
        self.menuBar.addAction(self.menuLogout.menuAction())
#666666666666666666666666666666666666666666666666666666666666666666666666666666

        self.tableWidget_10.setFixedHeight(350)
        self.tableWidget_10.setFixedWidth(829)
        self.tableWidget_10.setColumnWidth(1,76)
        self.tableWidget_10.setColumnWidth(2,41)
        self.tableWidget_10.setColumnWidth(3,81)
        self.tableWidget_10.setColumnWidth(4,81)
        self.tableWidget_10.setColumnWidth(5,51)
        self.tableWidget_10.setColumnWidth(6,111)
        self.tableWidget_10.setColumnWidth(7,81)
        self.tableWidget_10.setColumnWidth(8,81)
        self.tableWidget_10.setColumnWidth(9,111)
        self.tableWidget_10.setColumnWidth(10,70)
        self.tableWidget_11.setFixedHeight(350)
        self.tableWidget_11.setFixedWidth(400)
        self.tableWidget_11.setColumnWidth(1,200)
        self.tableWidget_11.setColumnWidth(2,180)
        self.tableWidget_11.setColumnHidden(0,True)
        self.tableWidget_10.setColumnHidden(0,True)
        self.tableWidget_9.setColumnHidden(0,True)
        self.tableWidget_9.setFixedHeight(350)
        self.tableWidget_9.setFixedWidth(816)
        self.tableWidget_9.setColumnWidth(1,186)
        self.tableWidget_9.setColumnWidth(2,196)
        self.tableWidget_9.setColumnWidth(3,56)
        self.tableWidget_9.setColumnWidth(4,186)
        self.tableWidget_9.setColumnWidth(5,86)
        self.tableWidget_9.setColumnWidth(6,61)

        self.tabWidget.tabBar().setVisible(False)
        self.menuBar.setVisible(False)

        self.pushButton_2.clicked.connect(self.loginclient)

        self.actionpassassion.triggered.connect(self.showpassassion)
        self.actionComptabilit.triggered.connect(self.showcompta)
        self.actioncordination.triggered.connect(self.showcordination)
        self.actionExit.triggered.connect(self.logout)
        self.pushButton_41.clicked.connect(self.addpassassion)
        self.pushButton_49.clicked.connect(self.addcompta)
        self.pushButton_40.clicked.connect(self.selectfiles)
        self.pushButton_47.clicked.connect(self.selectfilescompta)
        self.pushButton_42.clicked.connect(self.deletecord)
        self.pushButton_37.clicked.connect(self.ok)
        self.pushButton_45.clicked.connect(self.okcompta)

        self.comboBox.currentIndexChanged.connect(self.loadpassassion)
        self.comboBox_3.currentIndexChanged.connect(self.loadcord)
        self.comboBox_2.currentIndexChanged.connect(self.loadcompta)
        self.pushButton_38.clicked.connect(self.Modifier)
        self.pushButton_51.clicked.connect(self.Modifiercord)
        self.pushButton_52.clicked.connect(self.updatecord)
        self.pushButton_46.clicked.connect(self.Modifiercompta)
        self.pushButton_39.clicked.connect(self.updatepassassion)
        self.pushButton_50.clicked.connect(self.updatecompta)
        self.pushButton_42.clicked.connect(self.loadpassassion)
        self.pushButton_44.clicked.connect(self.addcord)
        self.pushButton_43.clicked.connect(self.download) 
        self.pushButton_48.clicked.connect(self.downloadcompta)
    
       
#7777777777777777777777777777777777777777777777777777777777777777777777777777


        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_2.setText(_translate("MainWindow", "Connexion"))
        self.label_3.setText(_translate("MainWindow", "Authentification de système"))
        self.label_4.setText(_translate("MainWindow", "Entrer le nom d\'utilisateur et le mot de passe"))
        self.label_7.setText(_translate("MainWindow", "Mot de passe"))
        self.label_8.setText(_translate("MainWindow", "Nom d\'utilisateur"))
        self.label_19.setText(_translate("MainWindow", "Système de Gestion de Documents"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Login"))
        self.label_5.setText(_translate("MainWindow", "Bienvenu au sytème de gestion de dossiers"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Acueille"))
        self.lineEdit_32.setPlaceholderText(_translate("MainWindow", "Intutulé"))
        self.lineEdit_33.setPlaceholderText(_translate("MainWindow", "N° de marché"))
        self.lineEdit_34.setPlaceholderText(_translate("MainWindow", "Financement"))
        self.lineEdit_35.setPlaceholderText(_translate("MainWindow", "Réf"))
        self.label.setText(_translate("MainWindow", "Date"))
        self.pushButton_37.setText(_translate("MainWindow", "Delete"))
        self.pushButton_38.setText(_translate("MainWindow", "Modifier"))
        self.pushButton_39.setText(_translate("MainWindow", "Enregistrer"))
        item = self.tableWidget_9.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "id"))
        item = self.tableWidget_9.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Sujet"))
        item = self.tableWidget_9.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "N° marché"))
        item = self.tableWidget_9.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Réf"))
        item = self.tableWidget_9.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Financement"))
        item = self.tableWidget_9.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Date"))
        item = self.tableWidget_9.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Fichier"))
        self.pushButton_40.setText(_translate("MainWindow", "Select"))
        self.lineEdit_36.setPlaceholderText(_translate("MainWindow", "File"))
        self.pushButton_41.setText(_translate("MainWindow", "Ajouter"))
        self.lineEdit_37.setPlaceholderText(_translate("MainWindow", "Filtre de recherche"))
        self.pushButton_43.setText(_translate("MainWindow", "Download"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Intitile"))
        self.comboBox.setItemText(2, _translate("MainWindow", "No marché"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Réf"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Source financement"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Date"))
        self.label_22.setText(_translate("MainWindow", "Gestion de passations"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Passation"))
        self.lineEdit_38.setPlaceholderText(_translate("MainWindow", "Facture N°"))
        self.lineEdit_39.setPlaceholderText(_translate("MainWindow", "Filtre de recherche"))
        self.pushButton_45.setText(_translate("MainWindow", "Delete"))
        self.lineEdit_40.setPlaceholderText(_translate("MainWindow", "Bénéficiaire"))
        self.pushButton_46.setText(_translate("MainWindow", "Modifier"))
        self.pushButton_47.setText(_translate("MainWindow", "Select"))
        item = self.tableWidget_10.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "id"))
        item = self.tableWidget_10.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Montant"))
        item = self.tableWidget_10.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "DRF"))
        item = self.tableWidget_10.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Bénéficiaire"))
        item = self.tableWidget_10.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Facture N°"))
        item = self.tableWidget_10.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "IMF"))
        item = self.tableWidget_10.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Motif de payement"))
        item = self.tableWidget_10.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Date"))
        item = self.tableWidget_10.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Net à payer"))
        item = self.tableWidget_10.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "Mode de payement"))
        item = self.tableWidget_10.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "File"))
        self.lineEdit_41.setPlaceholderText(_translate("MainWindow", "File"))
        self.label_2.setText(_translate("MainWindow", "Date Facture"))
        self.pushButton_48.setText(_translate("MainWindow", "Download"))
        self.lineEdit_42.setPlaceholderText(_translate("MainWindow", "Motif de payement"))
        self.pushButton_49.setText(_translate("MainWindow", "Ajouter"))
        self.lineEdit_43.setPlaceholderText(_translate("MainWindow", "Montant brut"))
        self.pushButton_50.setText(_translate("MainWindow", "Enregistrer"))
        self.lineEdit_62.setPlaceholderText(_translate("MainWindow", "IMF"))
        self.lineEdit_63.setPlaceholderText(_translate("MainWindow", "Net a payer"))
        self.lineEdit_64.setPlaceholderText(_translate("MainWindow", "Mode de payement"))
        self.lineEdit_65.setPlaceholderText(_translate("MainWindow", "DRF"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Montant"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "Bénéficiaire"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "Date"))
        self.comboBox_2.setItemText(4, _translate("MainWindow", "Num fact"))
        self.comboBox_2.setItemText(5, _translate("MainWindow", "Motif"))
        self.comboBox_2.setItemText(6, _translate("MainWindow", "IMF"))
        self.comboBox_2.setItemText(7, _translate("MainWindow", "DRF"))
        self.comboBox_2.setItemText(8, _translate("MainWindow", "Net"))
        self.comboBox_2.setItemText(9, _translate("MainWindow", "Mode Payement"))
        self.label_21.setText(_translate("MainWindow", "Gestion de Comptabilité"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Comptabilite"))
        self.pushButton_42.setText(_translate("MainWindow", "Delete"))
        self.pushButton_44.setText(_translate("MainWindow", "Ajouter"))
        self.label_12.setText(_translate("MainWindow", "Date"))
        item = self.tableWidget_11.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "id"))
        item = self.tableWidget_11.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Sujet"))
        item = self.tableWidget_11.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Date"))
        self.lineEdit_44.setPlaceholderText(_translate("MainWindow", "Filtre de recherche"))
        self.pushButton_51.setText(_translate("MainWindow", "Modifier"))
        self.pushButton_52.setText(_translate("MainWindow", "Enregistrer"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "Sujet"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "Date"))
        self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Sujet"))
        self.label_20.setText(_translate("MainWindow", "Gestion de Coordinations"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Coordination"))
        self.menuPassation.setTitle(_translate("MainWindow", "Passation"))
        self.menuComptabilit.setTitle(_translate("MainWindow", "Comptabilité"))
        self.menuCoordination.setTitle(_translate("MainWindow", "Coordination"))
        self.menuLogout.setTitle(_translate("MainWindow", "Logout"))
        self.btnconnection.setText(_translate("MainWindow", "connection "))
        self.btndeconnection.setText(_translate("MainWindow", "deconnection"))
        self.btnAppels_d_offres.setText(_translate("MainWindow", "Appels d\'offres"))
        self.btnAvis_generaux.setText(_translate("MainWindow", "Avis generaux"))
        self.btnPPM.setText(_translate("MainWindow", "PPM"))
        self.btnContrats.setText(_translate("MainWindow", "Contrats"))
        self.btnConges.setText(_translate("MainWindow", "Conges"))
        self.btnOrdre_de_mimssions.setText(_translate("MainWindow", "Ordre de mimssions"))
        self.btnAutre_documents.setText(_translate("MainWindow", "Autre documents"))
        self.btnRecu_emeteur.setText(_translate("MainWindow", "Recu emeteur"))
        self.btnRecu_destinateur.setText(_translate("MainWindow", "Recu destinateur"))
        self.actionAcueile.setText(_translate("MainWindow", "Acueile"))
        self.actionPassation.setText(_translate("MainWindow", "Passation"))
        self.actioncomptabilite.setText(_translate("MainWindow", "comptabilite"))
        self.actionRH.setText(_translate("MainWindow", "RH"))
        self.actionCourrier.setText(_translate("MainWindow", "Courrier"))
        self.actionpassassion.setText(_translate("MainWindow", "passassion"))
        self.actionComptabilit.setText(_translate("MainWindow", "Comptabilité"))
        self.actioncordination.setText(_translate("MainWindow", "cordination"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))

#-------------------------------------------------------------------------------------
    def loginclient(self):
        if(self.lineEdit.text()==""or self.lineEdit_2.text()==""):
            messagebox.showerror("Veuillez remplir les champs")
        else:
            if(self.lineEdit.text()=="SuperAdmin"and self.lineEdit_2.text()=="00010001"):
                self.tabWidget.setCurrentIndex(1)
                self.menuBar.setVisible(True)
                self.lineEdit.setText("")
                self.lineEdit_2.setText("")
                self.actioncordination.setDisabled(False)
                self.actionpassassion.setDisabled(False)
                self.actionComptabilit.setDisabled(False)
            elif(self.lineEdit.text()=="Passasseur"and self.lineEdit_2.text()=="00020002"):
                self.tabWidget.setCurrentIndex(1)
                self.menuBar.setVisible(True)
                self.lineEdit.setText("")
                self.lineEdit_2.setText("")
                self.actionpassassion.setDisabled(False)
                self.actionComptabilit.setDisabled(True)
                self.actioncordination.setDisabled(True)
            elif(self.lineEdit.text()=="Comptable"and self.lineEdit_2.text()=="00030003"):
                self.tabWidget.setCurrentIndex(1)
                self.menuBar.setVisible(True)
                self.lineEdit.setText("")
                self.lineEdit_2.setText("")
                self.actionComptabilit.setDisabled(False)
                self.actionpassassion.setDisabled(True)
                self.actioncordination.setDisabled(True)
            elif(self.lineEdit.text()=="Coordinateur"and self.lineEdit_2.text()=="12345678"):
                self.tabWidget.setCurrentIndex(1)
                self.menuBar.setVisible(True)
                self.lineEdit.setText("")
                self.lineEdit_2.setText("")
                self.actioncordination.setDisabled(False)
                self.actionpassassion.setDisabled(True)
                self.actionComptabilit.setDisabled(True)
            else:
                messagebox.showerror("Nom ou mot de pass invalide")
            # try:
            #     URL = "http://13.39.100.52/loginclient/"
            #     data={'username':self.lineEdit.text(),'password':self.lineEdit_2.text()}
            #     r = requests.post(url = URL, data = data)
            #     m=r.json()
            #     print(m['status'])
            #     if m['status']==False:
            #         messagebox.showerror(m['message'])
            #     else:
            #         self.tabWidget.setCurrentIndex(1)
            #         self.menuBar.setVisible(True)
                    
                    
            #     self.actionComptabilit.setDisabled(True)
            # except Exception as e:
                

    def showpassassion(self):
        self.tabWidget.setCurrentIndex(2)
        
        self.loadpassassion()
    def showcompta(self):
        self.tabWidget.setCurrentIndex(3)
        self.loadcompta()
    def showcordination(self):
        self.tabWidget.setCurrentIndex(4)
        self.loadcord()


    def selectfiles(self):
        fname=QFileDialog.getOpenFileName(None,'Open file',None,'*.*')
        self.lineEdit_36.setText(str(fname[0]))

    def selectfilescompta(self):
        fname=QFileDialog.getOpenFileName(None,'Open file',None,'*.*')
        self.lineEdit_41.setText(str(fname[0]))

    def ok(self):
        self.a= messagebox.askyesno('Voulez vous vraiment supprimer cet élève?')
        if self.a:
            try:
                ligne=self.tableWidget_9.currentRow()
                id=self.tableWidget_9.item(ligne,0).text()
                URL = "http://13.39.100.52/passassion/"+id+"/"
                Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
                r = requests.delete(url = URL, headers=Headers) 
                messagebox.showinfo("Suppression trminée")
                print(id)
                self.loadpassassion()
            except:
                messagebox.showerror("Echec de connexion")

    def deletecord(self):
        self.a= messagebox.askyesno('Voulez vous vraiment supprimer cet élève?')
        if self.a:
            try:
                ligne=self.tableWidget_11.currentRow()
                id=self.tableWidget_11.item(ligne,0).text()
                URL = "http://13.39.100.52/coord/"+id+"/"
                Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
                r = requests.delete(url = URL, headers=Headers) 
                print(r)
                messagebox.showinfo("Suppression trminée")
                print(id)
                self.loadcord()
            except:
                messagebox.showerror("Echec de connexion")

    def okcompta(self):
        self.a= messagebox.askyesno('Voulez vous vraiment supprimer cet élève?')
        if self.a:
            try:
                ligne=self.tableWidget_10.currentRow()
                id=self.tableWidget_10.item(ligne,0).text()
                URL = "http://13.39.100.52/compta/"+id+"/"
                Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
                r = requests.delete(url = URL, headers=Headers) 
                messagebox.showinfo("Suppression trminée")
                print(id)
                self.loadcompta()
            except:
                messagebox.showerror("Echec de connexion")

    def loadpassassion(self):
        try:
            URL = "http://13.39.100.52/passassion/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            r = requests.get(url = URL, headers=Headers)
            data = r.json()
            datahna=[]
            if(self.lineEdit_37.text()=='' or self.comboBox.currentText()==''):
                datahna=data
            else:
                print(self.lineEdit_32.text())
                for p in data:
                    if(self.comboBox.currentText()=='Intitile'):
                        if(p["sujet"].lower().__contains__(self.lineEdit_37.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'numeromarche': str(p['numeromarche']),
                                    'reference': str(p['reference']),
                                    'financement': str(p['financement']),
                                    'date': str(p['date']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox.currentText()=='No marché'):
                        if(p["numeromarche"].lower().__contains__(self.lineEdit_37.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'numeromarche': str(p['numeromarche']),
                                    'reference': str(p['reference']),
                                    'financement': str(p['financement']),
                                    'date': str(p['date']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox.currentText()=='Réf'):
                        if(p["reference"].lower().__contains__(self.lineEdit_37.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'numeromarche': str(p['numeromarche']),
                                    'reference': str(p['reference']),
                                    'financement': str(p['financement']),
                                    'date': str(p['date']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox.currentText()=='Source financement'):
                        if(p["financement"].lower().__contains__(self.lineEdit_37.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'numeromarche': str(p['numeromarche']),
                                    'reference': str(p['reference']),
                                    'financement': str(p['financement']),
                                    'date': str(p['date']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox.currentText()=='Date'):
                        if(p["date"].lower().__contains__(self.lineEdit_37.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'numeromarche': str(p['numeromarche']),
                                    'reference': str(p['reference']),
                                    'financement': str(p['financement']),
                                    'date': str(p['date']),
                                    'file': str(p['file']),
                                })
            row =0
            self.tableWidget_9.setRowCount(len(datahna))
            for a in datahna:
                self.tableWidget_9.setItem(row, 0, QtWidgets.QTableWidgetItem(str(a["id"])))
                self.tableWidget_9.setItem(row, 1, QtWidgets.QTableWidgetItem(a["sujet"]))
                self.tableWidget_9.setItem(row, 2, QtWidgets.QTableWidgetItem(a["numeromarche"]))
                self.tableWidget_9.setItem(row, 3, QtWidgets.QTableWidgetItem(a["reference"]))
                self.tableWidget_9.setItem(row, 4, QtWidgets.QTableWidgetItem(a["financement"]))
                self.tableWidget_9.setItem(row, 5, QtWidgets.QTableWidgetItem(a["date"]))
                self.tableWidget_9.setItem(row, 6, QtWidgets.QTableWidgetItem(a["file"]))
                row=row+1
        except:
            messagebox.showerror("Echec de connexion")
    
    def loadcompta(self):
        try:
            URL = "http://13.39.100.52/compta/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            r = requests.get(url = URL, headers=Headers)
            data = r.json()
            datahna=[]
            if(self.lineEdit_39.text()=='' or self.comboBox_2.currentText()==''):
                datahna=data
            else:
                for p in data:
                    if(self.comboBox_2.currentText()=='Montant'):
                        if(str(p["montant"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Bénéficiaire'):
                        if(str(p["beneficiaire"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Date'):
                        if(str(p["datefact"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Num fact'):
                        if(str(p["numfact"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Motif'):
                        if(str(p["motif"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='IMF'):
                        if(str(p["imf"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='DRF'):
                        if(str(p["drf"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Net'):
                        if(str(p["net"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
                    elif(self.comboBox_2.currentText()=='Mode Payement'):
                        if(str(p["modepay"]).lower().__contains__(self.lineEdit_39.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'montant': str(p['montant']),
                                    'drf': str(p['drf']),
                                    'beneficiaire': str(p['beneficiaire']),
                                    'datefact': str(p['datefact']),
                                    'numfact': str(p['numfact']),
                                    'motif': str(p['motif']),
                                    'imf': str(p['imf']),
                                    'net': str(p['net']),
                                    'modepay': str(p['modepay']),
                                    'file': str(p['file']),
                                })
            row =0
            self.tableWidget_10.setRowCount(len(datahna))
            for a in datahna:
                self.tableWidget_10.setItem(row, 0, QtWidgets.QTableWidgetItem(str(a["id"])))
                self.tableWidget_10.setItem(row, 1, QtWidgets.QTableWidgetItem(str(a["montant"])))
                self.tableWidget_10.setItem(row, 2, QtWidgets.QTableWidgetItem(a["drf"]))
                self.tableWidget_10.setItem(row, 3, QtWidgets.QTableWidgetItem(a["beneficiaire"]))
                self.tableWidget_10.setItem(row, 4, QtWidgets.QTableWidgetItem(a["numfact"]))
                self.tableWidget_10.setItem(row, 5, QtWidgets.QTableWidgetItem(a["imf"]))
                self.tableWidget_10.setItem(row, 6, QtWidgets.QTableWidgetItem(a["motif"]))
                self.tableWidget_10.setItem(row, 7, QtWidgets.QTableWidgetItem(a["datefact"]))
                self.tableWidget_10.setItem(row, 8, QtWidgets.QTableWidgetItem(a["net"]))
                self.tableWidget_10.setItem(row, 9, QtWidgets.QTableWidgetItem(a["modepay"]))
                self.tableWidget_10.setItem(row, 10, QtWidgets.QTableWidgetItem(a["file"]))
                row=row+1
        except:
            messagebox.showerror("Echec de connexion")
 
    def Modifier(self):
        try:
            ligne=self.tableWidget_9.currentRow()
            id=self.tableWidget_9.item(ligne,0).text()
            self.lineEdit_32.setText(self.tableWidget_9.item(ligne,1).text())
            self.lineEdit_33.setText(self.tableWidget_9.item(ligne,2).text())
            self.lineEdit_34.setText(self.tableWidget_9.item(ligne,3).text())
            self.lineEdit_35.setText(self.tableWidget_9.item(ligne,4).text())
            self.lineEdit_36.setVisible(False)
            self.pushButton_41.setVisible(False)
            self.dateEdit.setVisible(False)
            self.label.setVisible(False)
            self.pushButton_40.setVisible(False)
        except:
            messagebox.showerror('Selectionner une ligne dans la table')
    def Modifiercompta(self):
        try:
            ligne=self.tableWidget_10.currentRow()
            id=self.tableWidget_10.item(ligne,0).text()
            self.lineEdit_43.setText(self.tableWidget_10.item(ligne,1).text())
            self.lineEdit_65.setText(self.tableWidget_10.item(ligne,2).text())
            self.lineEdit_40.setText(self.tableWidget_10.item(ligne,3).text())
            self.lineEdit_38.setText(self.tableWidget_10.item(ligne,4).text())
            self.lineEdit_62.setText(self.tableWidget_10.item(ligne,5).text())
            self.lineEdit_42.setText(self.tableWidget_10.item(ligne,6).text())
            self.lineEdit_63.setText(self.tableWidget_10.item(ligne,8).text())
            self.lineEdit_64.setText(self.tableWidget_10.item(ligne,9).text())
            self.lineEdit_41.setVisible(False)
            self.pushButton_47.setVisible(False)
            self.dateEdit_2.setVisible(False)
            self.label_2.setVisible(False)
            self.pushButton_49.setVisible(False)
        except:
            messagebox.showerror('Selectionner une ligne dans la table')
    def Modifiercord(self):
        try:
            ligne=self.tableWidget_11.currentRow()
            id=self.tableWidget_11.item(ligne,0).text()
            self.plainTextEdit.setPlainText(self.tableWidget_11.item(ligne,1).text())
            self.pushButton_44.setVisible(False)
        except:
            messagebox.showerror('Selectionner une ligne dans la table')

    def download(self):
        try:
            ligne=self.tableWidget_9.currentRow()
            webbrowser.open(self.tableWidget_9.item(ligne,6).text())
        except:
            messagebox.showerror('Selectionner une ligne dans la table')
    def downloadcompta(self):
        try:
            ligne=self.tableWidget_10.currentRow()
            webbrowser.open(self.tableWidget_10.item(ligne,9).text())
        except:
            messagebox.showerror('Selectionner une ligne dans la table')
    def updatepassassion(self):
        try:
            ligne=self.tableWidget_9.currentRow()
            id=self.tableWidget_9.item(ligne,0).text()
            URL = "http://13.39.100.52/updatepassassion/"+id+"/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            data = {
                "sujet": self.lineEdit_32.text(),
                "numeromarche": self.lineEdit_33.text(),
                "reference": self.lineEdit_34.text(),
                "financement": self.lineEdit_35.text()
                }
            iol = requests.post(url = URL, headers=Headers, data=data)
            m = iol.text
            print(m)
            messagebox.showinfo("Modification trminée")
            self.loadpassassion()
            self.lineEdit_32.setText('')
            self.lineEdit_33.setText('')
            self.lineEdit_34.setText('')
            self.lineEdit_35.setText('')
            self.lineEdit_36.setText('')
            self.lineEdit_36.setVisible(True)
            self.pushButton_41.setVisible(True)
            self.dateEdit.setVisible(True)
            self.label.setVisible(True)
            self.pushButton_40.setVisible(True)
        except:
            messagebox.showerror("Echec de connexion")
    def updatecompta(self):
        try:
            ligne=self.tableWidget_10.currentRow()
            id=self.tableWidget_10.item(ligne,0).text()
            URL = "http://13.39.100.52/updatecompta/"+id+"/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            data = {
                "montant": self.lineEdit_43.text(),
                "beneficiaire": self.lineEdit_40.text(),
                "modepay": self.lineEdit_64.text(),
                "numfact": self.lineEdit_38.text(),
                "motif": self.lineEdit_42.text(),
                "imf": self.lineEdit_62.text(),
                "net": self.lineEdit_63.text(),
                "drf":self.lineEdit_65.text()
                }
            iol = requests.post(url = URL, headers=Headers, data=data)
            m = iol.text
            print(m)
            messagebox.showinfo("Modification trminée")
            self.loadcompta()
            self.lineEdit_43.setText('')
            self.lineEdit_40.setText('')
            self.lineEdit_38.setText('')
            self.lineEdit_62.setText('')
            self.lineEdit_42.setText('')
            self.lineEdit_63.setText('')
            self.lineEdit_64.setText('')
            self.lineEdit_65.setText('')
            self.lineEdit_41.setVisible(True)
            self.pushButton_47.setVisible(True)
            self.dateEdit_2.setVisible(True)
            self.label_2.setVisible(True)
            self.pushButton_49.setVisible(True)
        except:
            messagebox.showerror("Echec de connexion")

    def updatecord(self):
        try:
            ligne=self.tableWidget_11.currentRow()
            id=self.tableWidget_11.item(ligne,0).text()
            URL = "http://13.39.100.52/coord/"+id+"/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            data = {
                "sujet": self.plainTextEdit.toPlainText(),
                "date": self.dateEdit_3.text()[6]+self.dateEdit_3.text()[7]+self.dateEdit_3.text()[8]+self.dateEdit_3.text()[9]+"-"+self.dateEdit_3.text()[3]+self.dateEdit_3.text()[4]+"-"+self.dateEdit_3.text()[0]+self.dateEdit_3.text()[1],
                }
            iol = requests.put(url = URL, headers=Headers, data=data)
            m = iol.text
            print(m)
            messagebox.showinfo("Modification trminée")
            self.loadcord()
            self.plainTextEdit.setPlainText('')
            self.pushButton_44.setVisible(True)
        except:
            messagebox.showerror("Echec de connexion")

    def addpassassion(self):
        try:
            URL = "http://13.39.100.52/passassion/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            pythonfile=open(self.lineEdit_36.text(), "rb")
            data = {
                "sujet": self.lineEdit_32.text(),
                "numeromarche": self.lineEdit_33.text(),
                "reference": self.lineEdit_34.text(),
                "financement": self.lineEdit_35.text(),
                "date": self.dateEdit.text()[6]+self.dateEdit.text()[7]+self.dateEdit.text()[8]+self.dateEdit.text()[9]+"-"+self.dateEdit.text()[3]+self.dateEdit.text()[4]+"-"+self.dateEdit.text()[0]+self.dateEdit.text()[1],
                                                }
            fil = {
                'sujet': (None, data['sujet']),
                'numeromarche': (None, data['numeromarche']),
                'reference': (None, data['reference']),
                'financement': (None, data['financement']),
                'reference': (None, data['reference']),
                'date': (None, data['date']),
                'file':pythonfile
            }
            iol = requests.post(url = URL, headers=Headers, files=fil)
            m = iol.text
            messagebox.showinfo("Ajout trminée")
            print(m)
            self.loadpassassion()
            self.lineEdit_32.setText('')
            self.lineEdit_33.setText('')
            self.lineEdit_34.setText('')
            self.lineEdit_35.setText('')
            self.lineEdit_36.setText('')
        except:
            messagebox.showerror("Echec de connexion")

    def addcord(self):
        try:
            URL = "http://13.39.100.52/coord/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            data = {
                "sujet": self.plainTextEdit.toPlainText(),
                "date": self.dateEdit_3.text()[6]+self.dateEdit_3.text()[7]+self.dateEdit_3.text()[8]+self.dateEdit_3.text()[9]+"-"+self.dateEdit_3.text()[3]+self.dateEdit_3.text()[4]+"-"+self.dateEdit_3.text()[0]+self.dateEdit_3.text()[1],
                                                }
            iol = requests.post(url = URL, headers=Headers, data=data)
            m = iol.text
            messagebox.showinfo("Ajout trminée")
            print(m)
            self.loadcord()
            self.plainTextEdit.setPlainText('')
        except:
            messagebox.showerror("Echec de connexion")
    def loadcord(self):
        try:
            URL = "http://13.39.100.52/coord/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            r = requests.get(url = URL, headers=Headers)
            data = r.json()
            datahna=[]
            if(self.lineEdit_44.text()=='' or self.comboBox_3.currentText()==''):
                datahna=data
            else:
                print(self.lineEdit_44.text())
                for p in data:
                    if(self.comboBox_3.currentText()=='Sujet'):
                        if(p["sujet"].lower().__contains__(self.lineEdit_44.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'date': str(p['date']),
                                })
                    elif(self.comboBox_3.currentText()=='Date'):
                        if(p["date"].lower().__contains__(self.lineEdit_44.text().lower())):
                            datahna.append({
                                    'id': str(p['id']),
                                    'sujet': str(p['sujet']),
                                    'date': str(p['date']),
                                })
            row =0
            self.tableWidget_11.setRowCount(len(datahna))
            for a in datahna:
                self.tableWidget_11.setItem(row, 0, QtWidgets.QTableWidgetItem(str(a["id"])))
                self.tableWidget_11.setItem(row, 1, QtWidgets.QTableWidgetItem(a["sujet"]))
                self.tableWidget_11.setItem(row, 2, QtWidgets.QTableWidgetItem(a["date"]))
                row=row+1
        except:
            messagebox.showerror("Echec de connexion")
    
    
    def addcompta(self):
        try:
            URL = "http://13.39.100.52/compta/"
            Headers = {'Authorization':'token d6b0404ee529450598dacf55bce75904b6082bab'}
            pythonfile=open(self.lineEdit_41.text(), "rb")
            data = {
                "montant": self.lineEdit_43.text(),
                "beneficiaire": self.lineEdit_40.text(),
                "modepay": self.lineEdit_64.text(),
                "numfact": self.lineEdit_38.text(),
                "motif": self.lineEdit_42.text(),
                "imf": self.lineEdit_62.text(),
                "drf":self.lineEdit_65.text(),
                "net": self.lineEdit_63.text(),
                "datefact": self.dateEdit_2.text()[6]+self.dateEdit_2.text()[7]+self.dateEdit_2.text()[8]+self.dateEdit_2.text()[9]+"-"+self.dateEdit_2.text()[3]+self.dateEdit_2.text()[4]+"-"+self.dateEdit_2.text()[0]+self.dateEdit_2.text()[1],
                                                }
            fil = {
                'montant': (None, data['montant']),
                'beneficiaire': (None, data['beneficiaire']),
                'modepay': (None, data['modepay']),
                'numfact': (None, data['numfact']),
                'motif': (None, data['motif']),
                'imf': (None, data['imf']),
                'drf': (None, data['drf']),
                'net': (None, data['net']),
                'datefact': (None, data['datefact']),
                'file':pythonfile
            }
            iol = requests.post(url = URL, headers=Headers, files=fil)
            m = iol.text
            messagebox.showinfo("Ajout trminée")
            print(m)
            self.loadcompta()
            self.lineEdit_43.setText('')
            self.lineEdit_40.setText('')
            self.lineEdit_42.setText('')
            self.lineEdit_38.setText('')
            self.lineEdit_64.setText('')
            self.lineEdit_63.setText('')
            self.lineEdit_62.setText('')
            self.lineEdit_41.setText('')
            self.lineEdit_65.setText('')
        except:
            messagebox.showerror("Echec de connexion")
    
    def logout(self):
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget.tabBar().setVisible(False)
        self.menuBar.setVisible(False)
        self.actioncordination.setDisabled(True)
        self.actionpassassion.setDisabled(True)
        self.actionComptabilit.setDisabled(True)

#-----------------------------------------------------------------------------------

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
